---
import Layout from '../../layouts/Layout.astro';
import BlogList from './BlogList.astro';
import InnerHero from '../sections/InnerHero.astro';
import Button from '../ui/Button.astro';
import { ChevronLeft, ChevronRight } from 'lucide-astro';

import blogHeroImage from '@assets/images/blog-hero-2.jpg';

const seoTitle = "Blog";
const seoDescription = "Our blog is where we share our thoughts and ideas about the latest trends in the web development industry.";

interface Props {
    posts: any[];
    currentPage: number;
    totalPages: number;
    baseUrl: string;  // e.g., '/blog' or '/category/some-category'
    title: string;
    subtitle: string;
    currentCategory?: string;
}

const { 
    posts: paginatedPosts, 
    currentPage, 
    totalPages, 
    baseUrl,
    title,
    subtitle,
    currentCategory 
} = Astro.props;

    // Generate pagination URLs
const nextPage = currentPage < totalPages ? `${baseUrl}/${currentPage + 1}` : null;
const prevPage = currentPage > 1 
? currentPage - 1 === 1 
? baseUrl
: `${baseUrl}/${currentPage - 1}`
: null;

const heroContent = {
    title: title,
    description: subtitle,
    backgroundImage: blogHeroImage,
    overlayOpacity: 0.2
}
---
<Layout title={seoTitle} description={seoDescription}>
    <main>
    <InnerHero content={heroContent}/>
    <BlogList posts={paginatedPosts} currentCategory={currentCategory} />

    {totalPages > 1 && (
        <nav class="pagination-nav" aria-label="Blog pagination" data-aos="fade-in">
            <div class="container mx-auto px-4 py-16">
                <div class="flex items-center justify-center flex-wrap gap-6 text-sm text-[var(--color-body)]">
                    {prevPage && (
                        <Button
                            href={prevPage}
                            variant="ghost"
                            class="flex items-center gap-2 text-sm px-4 py-2 border border-[var(--color-border)] rounded-full hover:bg-[var(--color-surface-2)] transition"
                        >
                            <ChevronLeft size={18} />
                            Previous
                        </Button>
                    )}
                    
                    <div class="flex items-center gap-2">
                        {Array.from({ length: totalPages }, (_, i) => i + 1).map((pageNum) => (
                            <a
                                class={`w-9 h-9 flex items-center justify-center rounded-full border text-sm transition-all duration-200 ${
                                    currentPage === pageNum
                                        ? 'bg-primary text-black font-semibold'
                                        : 'border-[var(--color-border)] text-[var(--color-body-light)] hover:bg-[var(--color-surface-2)] hover:text-[var(--color-body)]'
                                }`}
                                aria-current={currentPage === pageNum ? 'page' : undefined}
                            >
                                {pageNum}
                            </a>
                        ))}
                    </div>

                    {nextPage && (
                        <Button
                            href={nextPage}
                            variant="ghost"
                            class="flex items-center gap-2 text-sm px-4 py-2 border border-[var(--color-border)] rounded-full hover:bg-[var(--color-surface-2)] transition"
                        >
                            Next
                            <ChevronRight size={18} />
                        </Button>
                    )}
                </div>
            </div>
        </nav>
    )}
    </main>
</Layout> 