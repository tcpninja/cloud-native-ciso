---
import { getCollection } from 'astro:content';
import PaginatedBlogLayout from '../../components/blog/PaginatedBlogLayout.astro';
import { categories, getCategoryBySlug } from '../../data/categories';
import { blogSetting } from '../../data/config';
import { getCategoryPosts } from '../../utils/getCategoryPosts';

export async function getStaticPaths() {
  const allPosts = await getCollection('blog', ({ data }) => {
    return import.meta.env.DEV || data.publish !== false;
  });

  const activeCategories = categories.filter(category =>
    allPosts.some(post => post.data.categories?.includes(category.name))
  );

  return activeCategories.map((category) => ({
    params: { slug: category.slug },
  }));
}

const slug = Astro.params.slug;
const category = getCategoryBySlug(slug);

if (!category) {
  throw new Error(`Category not found for slug: ${slug}`);
}

const currentPage = parseInt(Astro.url.searchParams.get('page') || '1');
const { posts, totalPages } = await getCategoryPosts(category, currentPage);
---

<PaginatedBlogLayout 
  posts={posts}
  currentPage={currentPage}
  totalPages={totalPages}
  baseUrl={`/category/${category.slug}`}
  title={category.name}
  subtitle={category.description}
  currentCategory={category.name}
/>
