---
import Button from '@components/ui/Button.astro';
import { Image } from 'astro:assets';

interface HeroContent {
    title: string;
    description: string;
    buttons?: {
        text: string;
        link: string;
        variant?: 'primary' | 'secondary' | 'ghostLight' | 'ghostDark';
        target?: string;
    }[];
    backgroundImage?: string | any;
    overlayOpacity?: number;
}

interface Props {
    content: HeroContent;
}

const { content } = Astro.props;
const opacity = content.overlayOpacity ?? 0.7;
---

<section class="header-offset relative text-[var(--color-headline-dark)] bg-[var(--color-background-dark)]">
    {content.backgroundImage && (
        <div class="absolute inset-0 left-0 top-0 w-full h-full overflow-hidden z-0">
            <Image
                src={content.backgroundImage}
                alt=""
                width={1920}
                height={1080}
                class="w-full h-full object-cover brightness-[0.85] contrast-[1.05]"
                quality={70}
                format="webp"
                loading="eager"
                decoding="async"
            />
            <div
                class="absolute inset-0 bg-[var(--color-background-dark)] mix-blend-multiply"
                style={`opacity: ${opacity};`}
            ></div>
        </div>
    )}

    <div class="site-container mx-auto px-4 py-large relative z-10 flex flex-col md:items-center md:justify-center md:text-center">
        <h1 
            class="text-[var(--color-headline-dark)] text-balance font-headline leading-tight mb-4"
            style="font-size: var(--text-h1);"
            data-aos="fade-up"
        >
            {content.title}
        </h1>
        
        <p 
            class="text-[var(--color-body-dark)] text-balance leading-relaxed max-w-2xl mx-auto"
            style="font-size: var(--text-base);"
            data-aos="fade-up" 
            data-aos-delay="100"
        >
            {content.description}
        </p>
        
        {content.buttons && content.buttons.length > 0 && (
            <div class="flex flex-wrap gap-4 mt-8" data-aos="fade-up" data-aos-delay="200">
                {content.buttons.map((button) => (
                    <Button
                        href={button.link}
                        target={button.target || '_self'}
                        variant={button.variant || 'primary'}
                    >
                        {button.text}
                    </Button>
                ))}
            </div>
        )}
    </div>
</section>