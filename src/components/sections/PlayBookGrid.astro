---
import { getCollection } from 'astro:content';
import { getPaddingClass } from '@utils/styleUtils';
import type { PaddingSize } from '@utils/styleUtils';
import { Image } from 'astro:assets';

interface Props {
  padding?: PaddingSize;
  paddingTop?: PaddingSize;
  paddingBottom?: PaddingSize;
}

const { padding, paddingTop, paddingBottom } = Astro.props;
const paddingClass = getPaddingClass({ padding, paddingTop, paddingBottom });

const playbooks = await getCollection('playbooks', ({ data }) => {
  return data.publish !== false;
});

// Sort playbooks by order frontmatter
const sortedPlaybooks = playbooks.sort((a, b) => a.data.order - b.data.order);
---

<section class:list={['relative', paddingClass]}>
  <div class="site-container mx-auto px-4">
    <h2 class="text-h4 font-bold mb-8">Security Playbooks</h2>
    <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-8 xl:gap-x-8 xl:gap-y-14">
      {
        sortedPlaybooks.map((playbook, index) => (
          <article
            class="flex flex-col group rounded-md cursor-pointer"
            data-aos="fade-up"
            data-aos-delay={index * 100}
            data-aos-duration="800"
          >
            <a href={playbook.data.link} class="flex flex-col rounded-md no-underline">
              <div class="relative mb-4 overflow-hidden rounded-md">
                <span class="absolute inset-0 -mt-12 h-400 w-1/2 translate-x-[250%] rotate-12 bg-white opacity-20 group-hover:transition-all group-hover:duration-300 ease-out group-hover:translate-x-[-250%] z-10" />
                {playbook.data.image ? (
                  <Image
                    src={playbook.data.image}
                    alt={`Cover image for ${playbook.data.title}`}
                    width={896}
                    height={1280}
                    quality={80}
                    format="webp"
                    class="w-full h-auto aspect-[3/4] object-cover rounded-md group-hover:scale-[1.02] hover:brightness-110 transition-all duration-500 ease-in-out"
                    loading="lazy"
                    decoding="async"
                  />
                ) : (
                  <div class="w-full aspect-[3/4] bg-gray-200 rounded-md flex items-center justify-center">
                    <span class="text-gray-400">No Image</span>
                  </div>
                )}
              </div>
              <h3 class="text-h5 font-medium transition-colors duration-500 group-hover:text-primary">
                {playbook.data.title}
              </h3>
              <p class="text-xsmall text-body-base">{playbook.data.description}</p>
            </a>
          </article>
        ))
      }
    </div>
  </div>
</section>
